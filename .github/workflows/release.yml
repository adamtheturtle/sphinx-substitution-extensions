---

name: Release

on: workflow_dispatch

jobs:
  build:
    name: Publish a release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v2

      - name: "Set up Python"
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          # This is like the example but we use ``*requirements.txt`` rather
          # than ``requirements.txt`` because we have multiple requirements
          # files.
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # We use '--ignore-installed' to avoid GitHub's cache which can cause
          # issues - we have seen packages from this cache cause trouble with
          # pip-extra-reqs.
          python -m pip install --ignore-installed --upgrade --editable .[dev]

      - name: "Publish a release"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          python admin/release.py

      - name: Build a binary wheel and a source tarball
        run: |
          # Checkout the latest tag - the one we just created.
          git fetch --tags
          git checkout $(git describe --tags $(git rev-list --tags --max-count=1))
          python -m build --sdist --wheel --outdir dist/ .

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
